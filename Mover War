setDefaultTab("tools")

local name = UI.Label("--[[VIAJAR]]--")

-- Define una macro que se ejecuta cada 800 milisegundos
macro(800, function()
  local rainbowDelay = 0 -- Inicializa el retraso del arco iris

  -- Itera sobre una lista de colores
  for k, color in ipairs({"#f56e6e", "#f5d864", "#96f76d", "#6a90f7", "#f783cf", "#d683f7"}) do
    -- Programa una función que cambia el color de la etiqueta después de un retraso
    schedule(rainbowDelay, function()
      name:setColor(color) -- Establece el color de la etiqueta
    end)

    -- Incrementa el retraso para el próximo color
    rainbowDelay = rainbowDelay + 100 -- Tiempo entre colores
  end
end, SpellsTab)

local cityTravelUI = setupUI([[
Panel
  height: 19

  Button
    id: editPlayerList
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-left: 1
    height: 18
    text: Caves 1
]], parent)

g_ui.loadUIFromString([[
CityTravelWindow < MainWindow
  text: Ciudades
  size: 150 330
  
  Button
    id: warscityButton
    text: War City
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded
  
  Button
    id: gelandiaButton
    text: Genlandia
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: eldflorestButton
    text: Eld Florest
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: morgunButton
    text: Morgun
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: zenetcityButton
    text: Zenet
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: naircityButton
    text: Nair
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: egipsecityButton
    text: Egipse
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: narutzcityButton
    text: Narutz
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: hashiramacityButton
    text: Hasirama
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: cantasiaButton
    text: Cantasia
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  HorizontalSeparator
    id: separator
    anchors.right: parent.right
    anchors.left: parent.left
    anchors.top: prev.bottom
    margin-top: 6
    margin-bottom: 6

  Button
    id: closeButton
    text: Close
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 45 21
]])

local panelName = "cityTravel"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

rootWidget = g_ui.getRootWidget()
if rootWidget then
  local cityTravelWindow = UI.createWindow('CityTravelWindow', rootWidget)
  cityTravelWindow:hide()

  cityTravelUI.editPlayerList.onClick = function(widget)
    cityTravelWindow:show()
    cityTravelWindow:raise()
    cityTravelWindow:focus()
  end

  cityTravelWindow.closeButton.onClick = function(widget)
    cityTravelWindow:hide()
  end
  
  local cityButtons = {
    {id = 'warscityButton', city = 'wars city'},
    {id = 'gelandiaButton', city = 'gelandia'},
    {id = 'eldflorestButton', city = 'eld florest'},
    {id = 'morgunButton', city = 'Morgun'},
    {id = 'zenetcityButton', city = 'zenet city'},
    {id = 'naircityButton', city = 'nair city'},
    {id = 'egipsecityButton', city = 'egipse city'},
    {id = 'narutzcityButton', city = 'narutz city'},
   {id = 'hashiramacityButton', city = 'hashirama city'},
   {id = 'cantasiaButton', city = 'cantasia'},
  }

  for _, buttonInfo in ipairs(cityButtons) do
    local button = cityTravelWindow:recursiveGetChildById(buttonInfo.id)
    button.onClick = function()
      NPC.say("hi")
      schedule(2000, function() NPC.say(buttonInfo.city) end)
      schedule(3000, function() NPC.say("yes") end)
      schedule(4000, function() NPC.say("yes") end)
    end
  end
end

local cityTravelUI = setupUI([[
Panel
  height: 19

  Button
    id: editPlayerList
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-left: 1
    height: 18
    text: Caves 2
]], parent)

g_ui.loadUIFromString([[
CityTravelWindow < MainWindow
  text: Ciudades
  size: 150 330
  

  Button
    id: goublecityButton
    text: Gouble
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded
  
  Button
    id: templeButton
    text: Temple of Haley
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: decrayButton
    text: Decray
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: colinasButton
    text: colinas
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: arenaButton
    text: Arena Quest
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: freeButton
    text: free zone
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: amunButton
    text: AmunRa 
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: sagradeButton
    text: Sagrade Island
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: ferockButton
    text: Ferock
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: zanburButton
    text: Zanbur
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  HorizontalSeparator
    id: separator
    anchors.right: parent.right
    anchors.left: parent.left
    anchors.top: prev.bottom
    margin-top: 6
    margin-bottom: 6

  Button
    id: closeButton
    text: Close
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 45 21
]])

local panelName = "cityTravel"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

rootWidget = g_ui.getRootWidget()
if rootWidget then
  local cityTravelWindow = UI.createWindow('CityTravelWindow', rootWidget)
  cityTravelWindow:hide()

  cityTravelUI.editPlayerList.onClick = function(widget)
    cityTravelWindow:show()
    cityTravelWindow:raise()
    cityTravelWindow:focus()
  end

  cityTravelWindow.closeButton.onClick = function(widget)
    cityTravelWindow:hide()
  end
  
  local cityButtons = {
    {id = 'goublecityButton', city = 'gouble city'},
    {id = 'templeButton', city = 'temple of haley'},
    {id = 'decrayButton', city = 'decray city'},
    {id = 'colinasButton', city = 'colinas'},
    {id = 'arenaButton', city = 'arena quest'},
    {id = 'freeButton', city = 'free zone'},
    {id = 'amunButton', city = 'amun ra city'},
    {id = 'sagradeButton', city = 'sagrade island'},
    {id = 'ferockButton', city = 'ferock'},
    {id = 'zanburButton', city = 'zanbur'},
  }

  for _, buttonInfo in ipairs(cityButtons) do
    local button = cityTravelWindow:recursiveGetChildById(buttonInfo.id)
    button.onClick = function()
      NPC.say("hi")
      schedule(2000, function() NPC.say(buttonInfo.city) end)
      schedule(3000, function() NPC.say("yes") end)
      schedule(4000, function() NPC.say("yes") end)
    end
  end
end

local cityTravelUI = setupUI([[
Panel
  height: 19

  Button
    id: editPlayerList
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-left: 1
    height: 18
    text: Caves 3
]], parent)

g_ui.loadUIFromString([[
CityTravelWindow < MainWindow
  text: Ciudades
  size: 150 330
  

  Button
    id: alaButton
    text: Ala in Hell
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded
  
  Button
    id: magnusButton
    text: Magnus Linear
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: sagitariaButton
    text: Sagitaria
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: pacificButton
    text: :.:Pacific:.:
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: tiberiadesButton
    text: :.:Tiberiades:.:
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  Button
    id: kazoordumButton
    text: :.:Kazoordum:.:
    anchors.top: prev.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 3
    margin-left: 3
    margin-right: 3
    height: 20
    font: verdana-11px-rounded

  HorizontalSeparator
    id: separator
    anchors.right: parent.right
    anchors.left: parent.left
    anchors.top: prev.bottom
    margin-top: 6
    margin-bottom: 6

  Button
    id: closeButton
    text: Close
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 45 21
]])

local panelName = "cityTravel"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

rootWidget = g_ui.getRootWidget()
if rootWidget then
  local cityTravelWindow = UI.createWindow('CityTravelWindow', rootWidget)
  cityTravelWindow:hide()

  cityTravelUI.editPlayerList.onClick = function(widget)
    cityTravelWindow:show()
    cityTravelWindow:raise()
    cityTravelWindow:focus()
  end

  cityTravelWindow.closeButton.onClick = function(widget)
    cityTravelWindow:hide()
  end
  
  local cityButtons = {
    {id = 'alaButton', city = 'ala in hell'},
    {id = 'magnusButton', city = 'magnus linear'},
    {id = 'sagitariaButton', city = 'sagitaria'},
    {id = 'pacificButton', city = 'pacific city'},
    {id = 'tiberiadesButton', city = 'tiberiades'},
    {id = 'kazoordumButton', city = 'kazoordum'},
  }

  for _, buttonInfo in ipairs(cityButtons) do
    local button = cityTravelWindow:recursiveGetChildById(buttonInfo.id)
    button.onClick = function()
      NPC.say("hi")
      schedule(2000, function() NPC.say(buttonInfo.city) end)
      schedule(3000, function() NPC.say("yes") end)
      schedule(4000, function() NPC.say("yes") end)
    end
  end
end

local panelNombre = "tcSkills"
local panelHud = setupUI([[
OutlineLabel < Label
  height: 25
  background-color: #00000044
  opacity: 0.89
  text-auto-resize: true
  font: verdana-11px-rounded
  anchors.left: parent.left
  $first:
    anchors.top: parent.top
  $!first:
    anchors.top: prev.bottom

Panel
  id: panelHabilidad
  height: 200
  width: 150
  anchors.left: parent.left
  anchors.bottom: parent.bottom
  margin-bottom: 40
  margin-left: 5
]], modules.game_interface.getMapPanel())

function valorConComas(cantidad)
  local formateado = cantidad
  while true do  
    formateado, cambios = string.gsub(formateado, "^(-?%d+)(%d%d%d)", '%1,%2')
    if (cambios == 0) then
      break
    end
  end
  return formateado
end

local expPorHora = 0
local siguienteNivelEn = "00h:00m"

function actualizarExpPorHora()
  if player.expSpeed ~= nil then
    local expPorHoraCalculado = math.floor(player.expSpeed * 3600)
    if expPorHoraCalculado > 0 then
      expPorHora = valorConComas(expPorHoraCalculado)
    end
  end
end

function mostrarExpPorHora()
  local etiqueta = panelHud[1] or UI.createWidget("OutlineLabel", panelHud)
  etiqueta:setId(1)

  etiqueta:setColoredText({
    'Exp/h: ', 'white',
    expPorHora, 'green',
    ' x Hora', 'orange',
    siguienteNivelEn
  })
end

function calcularStamina()
  local stam = stamina()
  local horas = math.floor(stam / 60)
  local minutos = stam % 60
  if minutos < 10 then
    minutos = '0' .. minutos
  end
  local porcentaje = math.floor(100 * stam / (42 * 60))
  return horas.. ':'.. minutos, ' ('..porcentaje..'%)'
end

function mostrarStamina()
  local etiqueta = panelHud[2] or UI.createWidget("OutlineLabel", panelHud)
  etiqueta:setId(2)
  local horas, porcentaje = calcularStamina()

  etiqueta:setColoredText({
    'Stamina: ', 'white',
    horas, 'green',
    porcentaje, 'white'
  })
end

function mostrarNivel()
  local etiqueta = panelHud[3] or UI.createWidget("OutlineLabel", panelHud)
  etiqueta:setId(3)

  local porcentajeActual = player:getLevelPercent()
  local porcentajeFaltante = 100 - porcentajeActual

  etiqueta:setColoredText({
    'Nivel: ', 'white',
    level(), 'green',
    '', porcentajeActual, ' (-', 'orange', porcentajeFaltante, '%)', '%)', 'orange'
  })
end

function mostrarDistancia()
  local etiqueta = panelHud[4] or UI.createWidget("OutlineLabel", panelHud)
  etiqueta:setId(4)

  local porcentajeActual = player:getSkillLevelPercent(SKILL_DISTANCE)
  local porcentajeFaltante = 100 - porcentajeActual

  etiqueta:setColoredText({
    'Distancia: ', 'white',
    player:getSkillLevel(SKILL_DISTANCE), 'green',
    '', porcentajeActual, ' (-', 'orange', porcentajeFaltante, '%)', '%)', 'orange'
  })
end

function mostrarMagicLevel()
  local etiqueta = panelHud[5] or UI.createWidget("OutlineLabel", panelHud)
  etiqueta:setId(5)

  local porcentajeActual = player:getMagicLevelPercent()
  local porcentajeFaltante = 100 - porcentajeActual

  etiqueta:setColoredText({
    'Magic Lvl: ', 'white',
    player:getMagicLevel(), 'green',
    '', porcentajeActual, ' (-', 'orange', porcentajeFaltante, '%)', '%)', 'orange'
  })
end

local checarExpPorHora = macro(2000, 'Checar Exp Por Hora', function()
  actualizarExpPorHora()
  mostrarExpPorHora()
  mostrarStamina()
  mostrarNivel()
  mostrarDistancia()
  mostrarMagicLevel()
end)

panelHud:breakAnchors() --editado por Madgenius
panelHud:move(250, 250) -- Ajusta la posicion del panel HUD cambiando estos valores

function inicializar()
  actualizarExpPorHora()
  mostrarExpPorHora()
  mostrarStamina()
  mostrarNivel()
  mostrarDistancia()
  mostrarMagicLevel()
end

inicializar()
