-- size es ancho alto
setDefaultTab("Main")

g_ui.loadUIFromString([[
ConfigWindow < MainWindow
  text: SENZU
  size: 100 150

  HorizontalSeparator
    id: separator
    anchors.right: parent.right
    anchors.left: parent.left
    anchors.bottom: closeButton.top
    margin-bottom: 6

  Panel
    id: lista
    anchors.fill: parent
    anchors.bottom: closeButton.top
    layout:
      type: grid
      cell-size: 110 15
      cell-spacing: 2

  Button
    id: closeButton
    text: Cerrar
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 45 21
]])

local panelName = "configMacro"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

local rootWidget = g_ui.getRootWidget()
local configWindow

configWindow = UI.createWindow('ConfigWindow', rootWidget)
configWindow:hide()

local listaMacros = {}

local Exo = macro(1, 'EXODIA', function()
  if hppercent() <= 90 or manapercent() <= 90 then
   usewith(13233, player)
   end
end)


local Ten = macro(1, 'TENEBRA', function()
  if hppercent() <= 90 or manapercent() <= 90 then
   usewith(13320, player)
   end
end)

local Ray= macro(1, 'RAYMOND', function()
  if hppercent() <= 98 or manapercent() <= 98 then
   usewith(6105, player)
   end
end)

table.insert(listaMacros, Exo)
table.insert(listaMacros, Ten)
table.insert(listaMacros, Ray)

local checkboxes = {}

for _, mac in ipairs(listaMacros) do
    local checkbox = g_ui.createWidget("CheckBox", configWindow.lista)
    checkbox:setText(mac.switch:getText())
    checkbox.onCheckChange = function(wid, isChecked)
        mac.setOn(isChecked and config.enabled)
    end
    checkbox:setChecked(mac.isOn())
    mac.switch:setVisible(false)
    table.insert(checkboxes, checkbox)
end

configWindow.closeButton.onClick = function(widget)
    configWindow:hide()
end

UI.SwitchAndButton({on = config.enabled, left = "SENZU", right = "MENU"}, function(widget)
    config.enabled = not config.enabled
    for i, mac in ipairs(listaMacros) do
        mac.setOn(config.enabled and checkboxes[i]:isChecked())
    end
end, function()
    configWindow:show()
    configWindow:raise()
    configWindow:focus()
end)
    
